<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lei.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.lei.model.Reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="modifyTime" property="modifytime" jdbcType="TIMESTAMP" />
    <result column="publishTime" property="publishtime" jdbcType="TIMESTAMP" />
    <result column="topicId" property="topicid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lei.model.Reply" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, modifyTime, publishTime, topicId, userId, title
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lei.model.Reply" >
    insert into t_reply (id, modifyTime, publishTime, 
      topicId, userId, title, 
      content)
    values (#{id,jdbcType=INTEGER}, #{modifytime,jdbcType=TIMESTAMP}, #{publishtime,jdbcType=TIMESTAMP}, 
      #{topicid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lei.model.Reply" >
    insert into t_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="modifytime != null" >
        modifyTime,
      </if>
      <if test="publishtime != null" >
        publishTime,
      </if>
      <if test="topicid != null" >
        topicId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishtime != null" >
        #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="topicid != null" >
        #{topicid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lei.model.Reply" >
    update t_reply
    <set >
      <if test="modifytime != null" >
        modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishtime != null" >
        publishTime = #{publishtime,jdbcType=TIMESTAMP},
      </if>
      <if test="topicid != null" >
        topicId = #{topicid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lei.model.Reply" >
    update t_reply
    set modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      topicId = #{topicid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lei.model.Reply" >
    update t_reply
    set modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      publishTime = #{publishtime,jdbcType=TIMESTAMP},
      topicId = #{topicid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findLastReplyByTopicId" parameterType="java.lang.Integer" resultType="com.lei.model.Reply">
  	select * from t_reply 
  	<trim prefix="where" prefixOverrides="and|or">
  		<if test="topicId>0">
  		topicId =#{topicId}
  		</if>
  	</trim>
  	order by publicTime desc
  
  </select>
  
  <select id="getReplyCountByTopicId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select count(*) from t_reply
  	<trim prefix="where" prefixOverrides="and|or">
  		<if test="topicId>0">
  			topicId =#{topicId}
  		</if>
  	</trim>
  </select>
  
  <select id="findReplyListByTopicId" parameterType="Map" resultType="com.lei.model.Reply">
  	select *ã€€from t_reply
  	<trim prefix="where" prefixOverrides="and|or">
  		<if test="topicId>0">
  			topicId =#{topicId}
  		</if>
  	</trim>
  	limit  #{pageUtil.start},#{pageUtil.rows}
  </select>
  
  
  
</mapper>